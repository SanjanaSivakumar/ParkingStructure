/*
 * Car.cpp
 *
 *      Author: sanjana_mac
 */
//Sanjana Sivakumar CS2336.001
//The purpose of this class is to set the definition for when a Car object will be created.
//This class is set up in such a way that aids in the functionality of the parking structure
//This class is one of the derived classes of the Vehicle class

#include "Car.h"

using namespace std;
//This is the Car class's constructor, there are no parameters, this function returns a default Car object
Car::Car() {
	position = 0;
	size = 2;
}
//This is the Car class's destructor, there are no parameters, this function executes when an object goes out of scope
Car::~Car() {
	cout << "Car destroyed" << endl;
}
//This function does not take in any parameters and returns an int with the size of a Car object, which is 2.
//This method helps with checking a vehicle's size before allowing it to park
int Car::getSize(){
	return 2;
}
//This function does not take in any parameters and returns the string, "C". This function helps
//with the ParkingStructure class's toString method, which is called when the user chooses to print out
//the ParkingStructure
string Car::toString(){
	return "C";
}
//This function does not take in any parameters and returns an int, whose value is the position at which
//the Car is parked, this helps a lot with the removal of a vehicle from a ParkingSpot
int Car::getPosition(){
	return position;
}
//This function returns void, and takes in an int as a parameter. The parameter is the value of the position
//that the user wishes to park their car. This function helps with the parking of a vehicle from a ParkingSpot
void Car::setPosition(int p){
	position = p;
}
